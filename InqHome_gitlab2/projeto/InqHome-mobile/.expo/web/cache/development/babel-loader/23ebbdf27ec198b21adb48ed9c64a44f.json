{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ADS\\\\InqHome_gitlab2\\\\projeto\\\\InqHome-mobile\\\\src\\\\pages\\\\image\\\\ImageScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[Symbol.iterator](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport { ImageBrowser } from 'expo-image-picker-multiple';\n\nvar ImageScreen = function (_Component) {\n  _inherits(ImageScreen, _Component);\n\n  var _super = _createSuper(ImageScreen);\n\n  function ImageScreen() {\n    var _this;\n\n    _classCallCheck(this, ImageScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this._getHeaderLoader = function () {\n      return React.createElement(ActivityIndicator, {\n        size: \"small\",\n        color: '#0580FF',\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 5\n        }\n      });\n    };\n\n    _this.imagesCallback = function (callback) {\n      var navigation = _this.props.navigation;\n\n      _this.props.navigation.setOptions({\n        headerRight: function headerRight() {\n          return _this._getHeaderLoader();\n        }\n      });\n\n      callback.then(function _callee(photos) {\n        var cPhotos, _iterator, _step, photo, pPhoto;\n\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                cPhotos = [];\n                _iterator = _createForOfIteratorHelperLoose(photos);\n\n              case 2:\n                if ((_step = _iterator()).done) {\n                  _context.next = 10;\n                  break;\n                }\n\n                photo = _step.value;\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(_this._processImageAsync(photo.uri));\n\n              case 6:\n                pPhoto = _context.sent;\n                cPhotos.push({\n                  uri: pPhoto.uri,\n                  name: photo.filename,\n                  type: 'image/jpg'\n                });\n\n              case 8:\n                _context.next = 2;\n                break;\n\n              case 10:\n                navigation.navigate('Anuncio', {\n                  photosir: cPhotos\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    };\n\n    _this._renderDoneButton = function (count, onSubmit) {\n      if (!count) return null;\n      return React.createElement(TouchableOpacity, {\n        title: 'Done',\n        onPress: onSubmit,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 12\n        }\n      }, React.createElement(Text, {\n        onPress: onSubmit,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, \"Done\"));\n    };\n\n    _this.updateHandler = function (count, onSubmit) {\n      _this.props.navigation.setOptions({\n        title: \"Selected \" + count + \" files\",\n        headerRight: function headerRight() {\n          return _this._renderDoneButton(count, onSubmit);\n        }\n      });\n    };\n\n    _this.renderSelectedComponent = function (number) {\n      return React.createElement(View, {\n        style: styles.countBadge,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 5\n        }\n      }, React.createElement(Text, {\n        style: styles.countBadgeText,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, number));\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageScreen, [{\n    key: \"_processImageAsync\",\n    value: function _processImageAsync(uri) {\n      var file;\n      return _regeneratorRuntime.async(function _processImageAsync$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(uri, [{\n                resize: {\n                  width: 1000\n                }\n              }], {\n                compress: 0.8,\n                format: ImageManipulator.SaveFormat.JPEG\n              }));\n\n            case 2:\n              file = _context2.sent;\n              return _context2.abrupt(\"return\", file);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var emptyStayComponent = React.createElement(Text, {\n        style: styles.emptyStay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 32\n        }\n      }, \"Empty =(\");\n      return React.createElement(View, {\n        style: [styles.flex, styles.container],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }, React.createElement(ImageBrowser, {\n        max: 4,\n        onChange: this.updateHandler,\n        callback: this.imagesCallback,\n        renderSelectedComponent: this.renderSelectedComponent,\n        emptyStayComponent: emptyStayComponent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ImageScreen;\n}(Component);\n\nexport { ImageScreen as default };\nvar styles = StyleSheet.create({\n  flex: {\n    flex: 1\n  },\n  container: {\n    position: 'relative',\n    padding: 34\n  },\n  emptyStay: {\n    textAlign: 'center'\n  },\n  countBadge: {\n    paddingHorizontal: 8.6,\n    paddingVertical: 5,\n    borderRadius: 50,\n    position: 'absolute',\n    right: 3,\n    bottom: 3,\n    justifyContent: 'center',\n    backgroundColor: '#0580FF'\n  },\n  countBadgeText: {\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    padding: 'auto',\n    color: '#ffffff'\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/ADS/InqHome_gitlab2/projeto/InqHome-mobile/src/pages/image/ImageScreen.js"],"names":["React","Component","ImageManipulator","ImageBrowser","ImageScreen","_getHeaderLoader","imagesCallback","callback","navigation","props","setOptions","headerRight","then","photos","cPhotos","photo","_processImageAsync","uri","pPhoto","push","name","filename","type","navigate","photosir","catch","e","console","log","_renderDoneButton","count","onSubmit","updateHandler","title","renderSelectedComponent","number","styles","countBadge","countBadgeText","manipulateAsync","resize","width","compress","format","SaveFormat","JPEG","file","emptyStayComponent","emptyStay","flex","container","StyleSheet","create","position","padding","textAlign","paddingHorizontal","paddingVertical","borderRadius","right","bottom","justifyContent","backgroundColor","fontWeight","alignSelf","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, ActivityIndicator } from 'react-native';\r\nimport * as ImageManipulator from 'expo-image-manipulator';\r\nimport {ImageBrowser} from 'expo-image-picker-multiple';\r\n\r\nexport default class ImageScreen extends Component {\r\n\r\n\r\n  _getHeaderLoader = () => (\r\n    <ActivityIndicator size='small' color={'#0580FF'}/>\r\n  );\r\n\r\n  imagesCallback = (callback) => {\r\n    const { navigation } = this.props;\r\n    this.props.navigation.setOptions({\r\n      headerRight: () => this._getHeaderLoader()\r\n    });\r\n\r\n    callback.then(async (photos) => {\r\n      const cPhotos = [];\r\n      for(let photo of photos) {\r\n        const pPhoto = await this._processImageAsync(photo.uri);\r\n        cPhotos.push({\r\n          uri: pPhoto.uri,\r\n          name: photo.filename,\r\n          type: 'image/jpg'\r\n        })\r\n      }\r\n\r\n      navigation.navigate('Anuncio', {photosir: cPhotos});\r\n    })\r\n    .catch((e) => console.log(e));\r\n  };\r\n\r\n  async _processImageAsync(uri) {\r\n    const file = await ImageManipulator.manipulateAsync(\r\n      uri,\r\n      [{resize: { width: 1000 }}],\r\n      { compress: 0.8, format: ImageManipulator.SaveFormat.JPEG }\r\n    );\r\n    return file;\r\n  };\r\n\r\n  _renderDoneButton = (count, onSubmit) => {\r\n    if (!count) return null;\r\n    return <TouchableOpacity title={'Done'} onPress={onSubmit}>\r\n      <Text onPress={onSubmit}>Done</Text>\r\n    </TouchableOpacity>\r\n  }\r\n\r\n  updateHandler = (count, onSubmit) => {\r\n    this.props.navigation.setOptions({\r\n      title: `Selected ${count} files`,\r\n      headerRight: () => this._renderDoneButton(count, onSubmit)\r\n    });\r\n  };\r\n\r\n  renderSelectedComponent = (number) => (\r\n    <View style={styles.countBadge}>\r\n      <Text style={styles.countBadgeText}>{number}</Text>\r\n    </View>\r\n  );\r\n\r\n  render() {\r\n    const emptyStayComponent = <Text style={styles.emptyStay}>Empty =(</Text>;\r\n   // const txt = this.props.route.params.txt;\r\n\r\n    return (\r\n      <View style={[styles.flex, styles.container]}>\r\n        <ImageBrowser\r\n          max={4}\r\n          onChange={this.updateHandler}\r\n          callback={this.imagesCallback}\r\n          renderSelectedComponent={this.renderSelectedComponent}\r\n          emptyStayComponent={emptyStayComponent}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  flex: {\r\n    flex: 1\r\n  },\r\n  container: {\r\n    position: 'relative',\r\n    \r\n    padding: 34,\r\n  },\r\n  emptyStay:{\r\n    textAlign: 'center',\r\n  },\r\n  countBadge: {\r\n    paddingHorizontal: 8.6,\r\n    paddingVertical: 5,\r\n    borderRadius: 50,\r\n    position: 'absolute',\r\n    right: 3,\r\n    bottom: 3,\r\n    justifyContent: 'center',\r\n    backgroundColor: '#0580FF'\r\n  },\r\n  countBadgeText: {\r\n    fontWeight: 'bold',\r\n    alignSelf: 'center',\r\n    padding: 'auto',\r\n    color: '#ffffff'\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}