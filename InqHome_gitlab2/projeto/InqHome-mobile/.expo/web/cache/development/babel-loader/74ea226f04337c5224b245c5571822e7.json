{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"text\", \"textSize\", \"iconName\", \"iconColor\", \"iconSize\", \"buttonDefaultColor\", \"buttonSelectedColor\", \"textDefaultColor\", \"textSelectedColor\", \"isChecked\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ADS\\\\InqHome_gitlab2\\\\projeto\\\\InqHome-mobile\\\\node_modules\\\\react-native-simple-select-button\\\\index.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { AntDesign } from '@expo/vector-icons';\n\nvar SimpleSelectButton = function SimpleSelectButton(_ref) {\n  var text = _ref.text,\n      textSize = _ref.textSize,\n      iconName = _ref.iconName,\n      iconColor = _ref.iconColor,\n      iconSize = _ref.iconSize,\n      buttonDefaultColor = _ref.buttonDefaultColor,\n      buttonSelectedColor = _ref.buttonSelectedColor,\n      textDefaultColor = _ref.textDefaultColor,\n      textSelectedColor = _ref.textSelectedColor,\n      isChecked = _ref.isChecked,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(TouchableOpacity, _extends({}, props, {\n    style: {\n      paddingVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      borderRadius: 5,\n      overflow: 'hidden',\n      textAlign: 'center',\n      justifyContent: 'center',\n      backgroundColor: isChecked === true ? buttonSelectedColor : buttonDefaultColor\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [styles.button_item, {\n      fontSize: textSize,\n      color: isChecked === true ? textSelectedColor : textDefaultColor\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, text), React.createElement(Text, {\n    style: [styles.button_item, {\n      position: 'absolute',\n      right: 25\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, isChecked === true ? React.createElement(AntDesign, {\n    name: iconName,\n    size: iconSize,\n    color: iconColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }) : null)));\n};\n\nvar styles = StyleSheet.create({\n  button_item: {\n    padding: 8,\n    marginVertical: 5,\n    borderRadius: 5,\n    textAlign: 'center'\n  }\n});\nexport default SimpleSelectButton;","map":{"version":3,"sources":["C:/Users/User/Desktop/ADS/InqHome_gitlab2/projeto/InqHome-mobile/node_modules/react-native-simple-select-button/index.js"],"names":["React","AntDesign","SimpleSelectButton","text","textSize","iconName","iconColor","iconSize","buttonDefaultColor","buttonSelectedColor","textDefaultColor","textSelectedColor","isChecked","props","paddingVertical","flexDirection","borderRadius","overflow","textAlign","justifyContent","backgroundColor","styles","button_item","fontSize","color","position","right","StyleSheet","create","padding","marginVertical"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,SAAT,QAA0B,oBAA1B;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAYpB;AAAA,MAXLC,IAWK,QAXLA,IAWK;AAAA,MAVLC,QAUK,QAVLA,QAUK;AAAA,MATLC,QASK,QATLA,QASK;AAAA,MARLC,SAQK,QARLA,SAQK;AAAA,MAPLC,QAOK,QAPLA,QAOK;AAAA,MANLC,kBAMK,QANLA,kBAMK;AAAA,MALLC,mBAKK,QALLA,mBAKK;AAAA,MAJLC,gBAIK,QAJLA,gBAIK;AAAA,MAHLC,iBAGK,QAHLA,iBAGK;AAAA,MAFLC,SAEK,QAFLA,SAEK;AAAA,MADFC,KACE;;AAEH,SACE,oBAAC,gBAAD,eACMA,KADN;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAE,KADV;AAELC,MAAAA,YAAY,EAAE,CAFT;AAGLC,MAAAA,QAAQ,EAAE,QAHL;AAILC,MAAAA,SAAS,EAAE,QAJN;AAKLC,MAAAA,cAAc,EAAE,QALX;AAMLC,MAAAA,eAAe,EAAER,SAAS,KAAK,IAAd,GAAqBH,mBAArB,GAA2CD;AANvD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACa,MAAM,CAACC,WAAR,EAAqB;AAAEC,MAAAA,QAAQ,EAAEnB,QAAZ;AAAsBoB,MAAAA,KAAK,EAAEZ,SAAS,KAAK,IAAd,GAAqBD,iBAArB,GAAyCD;AAAtE,KAArB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGP,IAFH,CATJ,EAaI,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACkB,MAAM,CAACC,WAAR,EAAqB;AAAEG,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,KAAK,EAAE;AAA/B,KAArB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACsEd,SAAS,KAAK,IAAd,GACpE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEP,QAAjB;AAA2B,IAAA,IAAI,EAAEE,QAAjC;AAA2C,IAAA,KAAK,EAAED,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADoE,GACF,IAFpE,CAbJ,CALF,CADF;AA4BH,CA1CD;;AA4CA,IAAMe,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,WAAW,EAAE;AACTO,IAAAA,OAAO,EAAE,CADA;AAETC,IAAAA,cAAc,EAAE,CAFP;AAGTd,IAAAA,YAAY,EAAE,CAHL;AAITE,IAAAA,SAAS,EAAE;AAJF;AADgB,CAAlB,CAAf;AAUA,eAAehB,kBAAf","sourcesContent":["import React from 'react'\nimport { View, StyleSheet, TouchableOpacity, Text } from 'react-native'\nimport { AntDesign } from '@expo/vector-icons'\n\n\nconst SimpleSelectButton = ({ \n  text,\n  textSize,\n  iconName,\n  iconColor,\n  iconSize,\n  buttonDefaultColor,\n  buttonSelectedColor,\n  textDefaultColor,\n  textSelectedColor,\n  isChecked,\n  ...props\n }) => {\n\n    return (\n      <TouchableOpacity\n        {...props}\n        style={{ paddingVertical: 10, }}\n        >\n\n        <View \n          style={{ \n            flexDirection: 'row',\n            borderRadius: 5,\n            overflow: 'hidden',\n            textAlign: 'center',\n            justifyContent: 'center',\n            backgroundColor: isChecked === true ? buttonSelectedColor : buttonDefaultColor \n          }}>\n            <Text\n              style={[styles.button_item, { fontSize: textSize, color: isChecked === true ? textSelectedColor : textDefaultColor } ]}>\n              {text}\n            </Text>\n            <Text \n              style={[styles.button_item, { position: 'absolute', right: 25, }]}>{isChecked === true ?\n              <AntDesign name={iconName} size={iconSize} color={iconColor} /> : null}\n            </Text>\n        </View>\n\n      </TouchableOpacity>\n    )\n\n}\n\nconst styles = StyleSheet.create({\n    button_item: {\n        padding: 8,\n        marginVertical: 5,\n        borderRadius: 5,\n        textAlign: 'center'\n    },\n\n})\n\nexport default SimpleSelectButton;\n"]},"metadata":{},"sourceType":"module"}