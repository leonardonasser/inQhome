{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ADS\\\\InqHome_gitlab2\\\\projeto\\\\InqHome-mobile\\\\node_modules\\\\expo-image-picker-multiple\\\\src\\\\ImageTile.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar ImageTile = function (_React$PureComponent) {\n  _inherits(ImageTile, _React$PureComponent);\n\n  var _super = _createSuper(ImageTile);\n\n  function ImageTile() {\n    _classCallCheck(this, ImageTile);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ImageTile, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          item = _this$props.item,\n          index = _this$props.index,\n          selected = _this$props.selected,\n          selectImage = _this$props.selectImage,\n          selectedItemNumber = _this$props.selectedItemNumber,\n          renderSelectedComponent = _this$props.renderSelectedComponent,\n          renderExtraComponent = _this$props.renderExtraComponent;\n      if (!item) return null;\n      return React.createElement(TouchableHighlight, {\n        style: {\n          opacity: selected ? 0.5 : 1\n        },\n        underlayColor: \"transparent\",\n        onPress: function onPress() {\n          return selectImage(index);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          position: 'relative'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, React.createElement(ImageBackground, {\n        style: {\n          width: width / 4,\n          height: width / 4\n        },\n        source: {\n          uri: item.uri\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, selected && renderSelectedComponent && renderSelectedComponent(selectedItemNumber), renderExtraComponent && renderExtraComponent(item)))));\n    }\n  }]);\n\n  return ImageTile;\n}(React.PureComponent);\n\nexport default ImageTile;","map":{"version":3,"sources":["C:/Users/User/Desktop/ADS/InqHome_gitlab2/projeto/InqHome-mobile/node_modules/expo-image-picker-multiple/src/ImageTile.js"],"names":["React","Dimensions","get","width","ImageTile","props","item","index","selected","selectImage","selectedItemNumber","renderSelectedComponent","renderExtraComponent","opacity","position","flex","alignItems","justifyContent","height","uri","PureComponent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,sBAAgBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAhB;AAAA,IAAOC,KAAP,mBAAOA,KAAP;;IAEMC,S;;;;;;;;;;;;;WACJ,kBAAS;AACP,wBAAkH,KAAKC,KAAvH;AAAA,UAAQC,IAAR,eAAQA,IAAR;AAAA,UAAcC,KAAd,eAAcA,KAAd;AAAA,UAAqBC,QAArB,eAAqBA,QAArB;AAAA,UAA+BC,WAA/B,eAA+BA,WAA/B;AAAA,UAA4CC,kBAA5C,eAA4CA,kBAA5C;AAAA,UAAgEC,uBAAhE,eAAgEA,uBAAhE;AAAA,UAAyFC,oBAAzF,eAAyFA,oBAAzF;AACA,UAAI,CAACN,IAAL,EAAW,OAAO,IAAP;AACX,aACE,oBAAC,kBAAD;AACE,QAAA,KAAK,EAAE;AAAEO,UAAAA,OAAO,EAAEL,QAAQ,GAAG,GAAH,GAAS;AAA5B,SADT;AAEE,QAAA,aAAa,EAAC,aAFhB;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAMC,WAAW,CAACF,KAAD,CAAjB;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEO,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,UAAU,EAAE,QAAvB;AAAiCC,UAAAA,cAAc,EAAE;AAAjD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,eAAD;AACE,QAAA,KAAK,EAAE;AAAEd,UAAAA,KAAK,EAAEA,KAAK,GAAG,CAAjB;AAAoBe,UAAAA,MAAM,EAAEf,KAAK,GAAG;AAApC,SADT;AAEE,QAAA,MAAM,EAAE;AAAEgB,UAAAA,GAAG,EAAEb,IAAI,CAACa;AAAZ,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGX,QAAQ,IAAIG,uBAAZ,IAAuCA,uBAAuB,CAACD,kBAAD,CAHjE,EAIGE,oBAAoB,IAAIA,oBAAoB,CAACN,IAAD,CAJ/C,CADF,CADF,CAJF,CADF;AAiBD;;;;EArBqBN,KAAK,CAACoB,a;;AAwB9B,eAAehB,SAAf","sourcesContent":["import React from 'react';\nimport {\n  Dimensions,\n  ImageBackground,\n  TouchableHighlight,\n  View,\n} from 'react-native';\n\nconst {width} = Dimensions.get('window');\n\nclass ImageTile extends React.PureComponent {\n  render() {\n    const { item, index, selected, selectImage, selectedItemNumber, renderSelectedComponent, renderExtraComponent } = this.props;\n    if (!item) return null;\n    return (\n      <TouchableHighlight\n        style={{ opacity: selected ? 0.5 : 1 }}\n        underlayColor='transparent'\n        onPress={() => selectImage(index)} >\n        <View style={{ position: 'relative' }}>\n          <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n            <ImageBackground\n              style={{ width: width / 4, height: width / 4 }}\n              source={{ uri: item.uri }} >\n              {selected && renderSelectedComponent && renderSelectedComponent(selectedItemNumber)}\n              {renderExtraComponent && renderExtraComponent(item)}\n            </ImageBackground>\n          </View>\n        </View>\n      </TouchableHighlight>\n    )\n  }\n}\n\nexport default ImageTile;"]},"metadata":{},"sourceType":"module"}